// <auto-generated />
using System;
using Congratulations.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Congratulations.Migrations
{
    [DbContext(typeof(CongratulationsDbContext))]
    [Migration("20240804135423_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Congratulations.Entities.Birthday", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("birthdays", t =>
                        {
                            t.HasCheckConstraint("ValidDate", "[date] BETWEEN '1900-01-01' AND '2100-12-31'");
                        });
                });

            modelBuilder.Entity("Congratulations.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("persons", t =>
                        {
                            t.HasCheckConstraint("ValidAge", "[Age] > 0 AND [Age] < 125");
                        });
                });

            modelBuilder.Entity("Congratulations.Entities.Birthday", b =>
                {
                    b.HasOne("Congratulations.Entities.Person", "Person")
                        .WithOne("Birthday")
                        .HasForeignKey("Congratulations.Entities.Birthday", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Congratulations.Entities.Person", b =>
                {
                    b.Navigation("Birthday");
                });
#pragma warning restore 612, 618
        }
    }
}
